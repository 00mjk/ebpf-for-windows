/*
 *  Copyright (C) 2020, Microsoft Corporation, All Rights Reserved
 *  SPDX-License-Identifier: MIT
*/
enclave {
    from "openenclave/edl/syscall.edl" import *;
    from "platform.edl" import *;

    // This contract is for the demo only will be replaced with a secure channel to ebpfcore
    trusted {
        public size_t ecall_verify_and_jit([in, count=byte_code_size] unsigned char* byte_code,
                                  size_t byte_code_size,
                                  [out, count=machine_code_size] unsigned char* machine_code,
                                  size_t machine_code_size,
                                  [out] size_t * jitted_size );
    };

    untrusted {
        uint64_t ocall_open_execution_context();
        void ocall_close_execution_context(uint64_t context);
        size_t ocall_write_execution_context(uint64_t context, [in, count=buffer_size] const unsigned char* buffer, size_t buffer_size);
        size_t ocall_read_execution_context(uint64_t context, [in, out, count=buffer_size] unsigned char* buffer, size_t buffer_size);

        void ocall_ebpf_enclave_log(int level, const char * message);
    };
};
